[build-system]
requires = [
  'gmsh<4.12.3',
  'meshio<5.3.6',
  'pygmsh<7.1.18',
  'pyvista',
  'scooby<0.9.3',
  'setuptools<69.0.4',
  'shapely<2.0.6'
]
build-backend = 'setuptools.build_meta'

[project]
name = "scikit-gmsh"
dynamic = [
  "readme",
  "version"
]
dependencies = [
  'gmsh<4.12.3',
  'meshio<5.3.6',
  'pygmsh<7.1.18',
  'pyvista',
  'scooby<0.9.3',
  'shapely<2.0.6'
]
requires-python = '>=3.9'

[project.optional-dependencies]
test = ['pytest==8.0.0']

[tool.mypy]
ignore_missing_imports = true
strict = true
warn_unreachable = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]

[tool.poetry]
name = "scikit-gmsh"
readme = "README.md"
authors = ["Tetsuo Koyama"]
description = "PyVista accessors for Gmsh to generate 3D finite element mesh"
version = "0.0.0"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error", 'ignore::DeprecationWarning']
log_cli_level = "info"
testpaths = [
  "tests"
]

[tool.ruff]
line-length = 150
src = ["src"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "COM812",
  "D203",
  "D212",
  "ISC001"
]

[tool.ruff.lint.isort]
# Sort by name, don't cluster "from" vs "import"
force-sort-within-sections = true
# Combines "as" imports on the same line
combine-as-imports = true
required-imports = ["from __future__ import annotations"]
force-single-line = true

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["INP001"]
"tests/**" = ["INP001", "S101"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.setuptools.dynamic]
version = {attr = 'skgmsh.__version__'}
readme = {file = "README.md", content-type = "text/markdown"}
